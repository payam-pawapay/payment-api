openapi: "3.0.0"
# Last Edit 28.03.21
info:
  title: "pawaPay Mobile Money API 5"
  description: |
    pawaPay Mobile Money API allows you to send and receive mobile money in several African countries. Using pawaPay API, with just one integration you'll have access to millions of mobile money users in multiple countries and multiple mobile operators. 
    
    # Introduction
    
    Mobile Money (MM) is a service provided by Mobile Network Operators (MNO). A mobile money wallet is equivalent to a bank account where the mobile money user's phone number is the account number. Using our API, with one simple integration you can collect payments from and terminate disbursements to 250mn mobile money wallets in 10 countries.

    ![pawaPay Solution](https://pawapay.co.uk/s/pawapay_solution.png)

    pawaPay API currently supports these 2 main flows:
    * **Payout (Disbursement)**
    Using Payout API you can send mobile money from your account to the user's mobile money wallet which is his / her mobile number.
    
    * **Deposit (Collection)**
    Using Deposit API you can request a mobile money payment from your customers, for example in an online shop. When the request is sent, the user is asked to approve the transaction on his / her mobile phone.

    # Payout (Disbursement)
    
    In a payout flow you initiate a request to transfer money from your wallet to a user's wallet. In a payout flow, pawaPay receives your request and sends it to the proper mobile network operator in the destination country. Whenever the  mobile operator finalizes your payout request, it will inform pawaPay and consequently pawaPay informs you of the result through a webhook callback. If you couldn't receive the callback, you can always call our Payout Get API to get the latest status and details of a specific payout request. 
    
    Your payout request can have one of the following statuses in pawaPay system:
    
    Status | Description
    -------|------------
    `ACCEPTED` | The payout request has been accepted by pawaPay.
    `PENDING` | The payout request is not yet submitted to the mobile operator.
    `SUBMITTED` | The payout request has been submitted to the mobile operator, with no response yet.
    `FAILED` | The payout request has failed. This is a **final state**. 
    `COMPLETED` | The payout request has been successful. This is a **final state**.

    Below sequence diagram demonstrates the high level flow of a payout request together with its different statuses:
    
    ![Payout Flow](https://pawapay.co.uk/s/pawapay_payout_flow.png)
    
    # Deposit (Collection)
    
    In the deposit flow you request money from a specific user, like the checkout process in an online shop or a mobile app. After the deposit request is sent to pawaPay, pawaPay sends the request to the mobile operator and consequently the mobile operator sends the request to the user's mobile for approval. User then confirms or rejects the request using his mobile phone. The approval mechanism is different for each mobile operator and in each country. It can be through SMS, USSD or specific applications. Upon user's approval (or rejection), mobile operators informs pawaPay of the result and pawaPay notifies you of the result by calling your deposit webhook callback. If you miss our callback, you can always check for the status of your deposit request through our Deposit Get API.

    Your deposit request can have one of the following statuses in pawaPay system:

    Status | Description
    -------|------------
    `ACCEPTED` | The deposit request has been accepted and has not processed internally.
    `PENDING` | The deposit request is not yet submitted to the mobile operator.
    `SUBMITTED` | The deposit request has been submitted to the mobile operator, with no response yet.
    `FAILED` | The deposit request has failed. This is a **final state**.
    `COMPLETED` | The deposit request has been successful. This is a **final state**.
    
    
    Below sequence diagram demonstrates the high level flow of a deposit request together with its different statuses:

    ![Deposit Flow](https://pawapay.co.uk/s/pawapay_deposit_flow.png)

    # Authentication
        
    pawaPay uses bearer token authentication. An authorization header is required for all calls to pawaPay endpoint. When authentication fails, the error code 401 is returned and in case of authorization failure, pawaPay returns error code 403.
    
    When using bearer token authentication, you access the API with an access token issued by pawaPay. To get your authentication token, please contact: [support@pawapay.co.uk](support@pawapay.co.uk)
    
  contact:
    name: "pawaPay Support"
    email: "support@pawapay.co.uk"
  version: "v1"
  x-logo:
    url: "https://www.pawapay.co.uk/s/pawapay_api_logo"
    altText: "pawaPay logo"
#servers:
#- url: "https://virtserver.swaggerhub.com/pawapay/customer-api/v1" 
#  description: "SwaggerHub API Auto Mocking"
tags:
- name: "payouts"
  x-displayName: "PAYOUTS"
#  description: "Payout (money out / disbursement) operations" #TODO
- name: "deposits"
  x-displayName: "DEPOSITS"
#  description: "Deposit (money in / collection) operations" #TODO
- name: "payout_model"
  x-displayName: Payout Model
  description: |
    <SchemaDefinition schemaRef="#/components/schemas/Payout" />  
- name: "deposit_model"
  x-displayName: Deposit Model
  description: |
    <SchemaDefinition schemaRef="#/components/schemas/Deposit" />  
x-tagGroups:
  - name: "API Reference"
    tags:
      - payouts
      - deposits
  # - name: "Models"
  #   tags:
  #     - payout_model
  #     - deposit_model

security:
  - bearer_authentication: []

paths:
  /payouts:
    post:
      tags:
      - "payouts"
      summary: "Mobile Money Disbursement Request"
      description: |
        Submits a payout transaction request. Each request is identified by a unique payoutId for asynchronous processing. This API call is <em>idempotent</em> which means it is safe to submit a Payout Request with the same <code>payoutId</code> multiple times. In this case duplicates are ignored.
        
        Each request can become either ACCEPTED, REJECTED or DUPLICATE_IGNORED
        
        Status | Description
        -------|------------
        `ACCEPTED` | The payout creation request has been accepted.
        `REJECTED` | The payout creation request has been rejected. See `rejectionReason` for details.
        `DUPLICATE_IGNORED` | The payout creation request has been ignored as a duplicate of an already accepted payout request. Duplication logic relies upon payoutId.

      operationId: "createPayout"
      requestBody:
        $ref: "#/components/requestBodies/PayoutCreationRequest"
      responses:
        "200":
          description: "Request has been processed by pawaPay"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayoutCreationResponse"
              examples:
                ACCEPTED:
                  value:
                    payoutId: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
                    status: "ACCEPTED"
                    created: "2020-10-19T11:17:01Z"
                DUPLICATE_IGNORED:
                  value:
                    payoutId: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
                    status: "DUPLICATE_IGNORED"
                    created: "2020-10-19T11:17:01Z"
                REJECTED:
                  value:
                    payoutId: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
                    status: "REJECTED"
                    rejectionReason:
                      rejectionCode: "AMOUNT_TOO_LARGE"
                      rejectionMessage: "Amount should not be greater than 1000"
        "400":
          description:  "Request is rejected due to incompatibility with pawaPay API specification"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Mandatory Field Missing:
                  value:
                    errorId: "4f0d5e13-7e88-4cc6-827c-8c0640dc2cd3"
                    errorCode: 1
                    errorMessage: "Invalid input: Missing required creator property 'amount'"
        "401":
          description: "Authentication Failure. Please check your authentication token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Authentication Failure:
                  value:
                    errorId: "cad1529e-040b-4c9d-a21d-2ba3056ff750"
                    errorCode: 2
                    errorMessage: "Authentication error"
        "403":
          description: "Authorization Failure. Please check your authentication token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Authorization Failure:
                  value:
                    errorId: "daa495f0-541d-4192-b636-a8877b25a510"
                    errorCode: 3
                    errorMessage: "Authorization error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                System Error:
                  value:
                    errorId: "d428a89e-fa8b-42b8-ba20-68be20d50af1"
                    errorCode: 0
                    errorMessage: "Internal error"
  /payouts/bulk:
    post:
      tags:
      - "payouts"
      summary: "Mobile Money Disbursement Request (Bulk)"
      description: "Batch operation which can be used to submit multiple payout transactions for asynchronous processing. NB! Bulk requests with more than 100 PayoutCreationRequest-s can be rejected by pawaPay. This API call is <em>idempotent</em>. That is, it is safe to submit a <code>BulkPayoutCreationRequest</code>  with the same <code>payoutId</code> multiple times: duplicates are ignored with the corresponding <code>PayoutCreationStatus</code>.
        \n\n<b>NB!</b> Since the request can be partially or fully rejected, an API user must check HTTP status code and analyze <code>PayoutCreationResponse</code> for each submitted <code>PayoutCreationRequest</code>."
      operationId: "createPayouts"
      requestBody:
        $ref: "#/components/requestBodies/BulkPayoutCreationRequest"
      responses:
        "200":
          description: "Request has been processed by pawaPay"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/PayoutCreationResponse"
              examples:
                Mixed Response:
                  value:
                    - payoutId: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
                      status: "ACCEPTED"
                      created: "2020-10-19T11:17:01Z"
                    - payoutId: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
                      status: "DUPLICATE_IGNORED"
                      created: "2020-10-19T10:22:49Z"
                    - payoutId: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
                      status: "REJECTED"
                      rejectionReason:
                        rejectionCode: "AMOUNT_TOO_LARGE"
                        ejectionMessage: "Amount should not be greater than 1000"
        "400":
          description: "Request is rejected due to incompatibility with pawaPay API specification"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Missing Mandatory Field:
                  value:
                    errorId: "4f0d5e13-7e88-4cc6-827c-8c0640dc2cd3"
                    errorCode: 1
                    errorMessage: "Invalid input: Missing required creator property 'amount'"
        "401":
          description: "Authentication Failure. Please check your authentication token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Authentication Failure:
                  value:
                    errorId: "cad1529e-040b-4c9d-a21d-2ba3056ff750"
                    errorCode: 2
                    errorMessage: "Authentication error"
        "403":
          description: "Authorization Failure. Please check your authentication token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Authorization Failure:
                  value:
                    errorId: "daa495f0-541d-4192-b636-a8877b25a510"
                    errorCode: 3
                    errorMessage: "Authorization error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                System Error:
                  value:
                    errorId: "d428a89e-fa8b-42b8-ba20-68be20d50af1"
                    errorCode: 0
                    errorMessage: "Internal error"
  /payouts/{payoutId}:
    get:
      tags:
      - "payouts"
      summary: "Get Payout Status and Details"
      description: "Get payout transaction status and payout details by payoutId which has been specified in PayoutCreationRequest. A list with at most one <code>Payout</code> is returned."
      operationId: "getPayout"
      parameters:
      - name: "payoutId"
        in: "path"
        description: "<code>payoutId</code> which has been specified in PayoutCreationRequest."
        required: true
        style: "simple"
        explode: false
        schema:
          type: "string"
          minLength: 1
          maxLength: 36
      responses:
        "200":
          description: "Request has been processed by pawaPay"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PayoutSearchResult"
              examples:
                COMPLETED:
                  value:
                    - payoutId: "8917c345-4791-4285-a416-62f24b6982db"
                      status: "COMPLETED"
                      amount: "123.45"
                      currency: "ZMW"
                      country: "ZMB"
                      correspondent: "MTN_MOMO_ZMB"
                      recipient:
                        type: "MSISDN"
                        address:
                          value: "256780334452"
                      customerTimestamp: "2020-10-19T08:17:00Z"
                      statementDescription: "From ACME company"
                      created: "2020-10-19T08:17:01Z"
                      receivedByRecipient: "2020-10-19T08:17:02Z"
                      correspondentIds:
                        SOME_CORRESPONDENT_ID: "12356789"
                ACCEPTED:
                  value:
                    - payoutId: "8917c345-4791-4285-a416-62f24b6982db"
                      status: "ACCEPTED"
                      amount: "123.45"
                      currency: "ZMW"
                      country: "ZMB"
                      correspondent: "MTN_MOMO_ZMB"
                      recipient:
                        type: "MSISDN"
                        address:
                          value: "256780334452"
                      customerTimestamp: "2020-10-19T08:17:00Z"
                      statementDescription: "From ACME company"
                      created: "2020-10-19T08:17:01Z"
                PENDING:
                  value:
                    - payoutId: "8917c345-4791-4285-a416-62f24b6982db"
                      status: "PENDING"
                      amount: "123.45"
                      currency: "ZMW"
                      country: "ZMB"
                      correspondent: "MTN_MOMO_ZMB"
                      recipient:
                        type: "MSISDN"
                        address:
                          value: "256780334452"
                      customerTimestamp: "2020-10-19T08:17:00Z"
                      statementDescription: "From ACME company"
                      created: "2020-10-19T08:17:01Z"
                SUBMITTED:
                  value:
                    - payoutId: "8917c345-4791-4285-a416-62f24b6982db"
                      status: "SUBMITTED"
                      amount: "123.45"
                      currency: "ZMW"
                      country: "ZMB"
                      correspondent: "MTN_MOMO_ZMB"
                      recipient:
                        type: "MSISDN"
                        address:
                          value: "256780334452"
                      customerTimestamp: "2020-10-19T08:17:00Z"
                      statementDescription: "From ACME company"
                      created: "2020-10-19T08:17:01Z"
                FAILED:
                  value:
                    - payoutId: "8917c345-4791-4285-a416-62f24b6982db"
                      status: "FAILED"
                      amount: "123.45"
                      currency: "ZMW"
                      country: "ZMB"
                      correspondent: "MTN_MOMO_ZMB"
                      recipient:
                        type: "MSISDN"
                        address:
                          value: "256780334452"
                      customerTimestamp: "2020-10-19T08:17:00Z"
                      statementDescription: "From ACME company"
                      created: "2020-10-19T08:17:01Z"
                      failureReason:
                        failureCode: "RECIPIENT_NOT_FOUND"
                        failureMessage: "Recipient not found"
                Payout Not Found:
                  value:
                    []

        "400":
          description: "Request is rejected due to incompatibility with pawaPay API specification"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Mandatory Field Missing:
                  value:
                    errorId: "4f0d5e13-7e88-4cc6-827c-8c0640dc2cd3"
                    errorCode: 1
                    errorMessage: "Invalid input"
        "401":
          description: "Authentication Failure. Please check your authentication token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Authentication Failure:
                  value:
                    errorId: "cad1529e-040b-4c9d-a21d-2ba3056ff750"
                    errorCode: 2
                    errorMessage: "Authentication error"
        "403":
          description: "Authorization Failure. Please check your authentication token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Authorization Failure:
                  value:
                    errorId: "daa495f0-541d-4192-b636-a8877b25a510"
                    errorCode: 3
                    errorMessage: "Authorization error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                System Error:
                  value:
                    errorId: "d428a89e-fa8b-42b8-ba20-68be20d50af1"
                    errorCode: 0
                    errorMessage: "Internal error"



  /deposits:
    post:
      tags:
      - "deposits"
      summary: "Mobile Money Collection Request"
      description: "Submit a deposit transaction identified by a unique depositId for asynchronous processing (money collection from the payer). This API call is <em>idempotent</em>. That is, it is safe to submit a <code>DepositCreationRequest</code> with the same <code>depositId</code> multiple times: duplicates are ignored with the corresponding <code>DepositCreationStatus</code>.
        \n\n<b>NB!</b> Since the request can be rejected, an API user must check HTTP status code and <code>DepositCreationResponse</code>."
      operationId: "createDesposit"
      requestBody:
        $ref: "#/components/requestBodies/DepositCreationRequest"
      responses:
        "200":
          description: "Request has been processed by pawaPay"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepositCreationResponse"
              examples:
                ACCEPTED:
                  value:
                    depositId: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
                    status: "ACCEPTED"
                    created: "2020-10-19T11:17:01Z"
                DUPLICATE_IGNORED:
                  value:
                    depositId: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
                    status: "DUPLICATE_IGNORED"
                    created: "2020-10-19T11:17:01Z"
                REJECTED:
                  value:
                    depositId: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
                    status: "REJECTED"
                    rejectionReason:
                      rejectionCode: "AMOUNT_TOO_LARGE"
                      rejectionMessage: "Amount should not be greater than 1000"
        "400":
          description: "Request is rejected due to incompatibility with pawaPay API specification"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Missing Mandatory Field:
                  value:
                    errorId: "4f0d5e13-7e88-4cc6-827c-8c0640dc2cd3"
                    errorCode: 1
                    errorMessage: "Invalid input: Missing required creator property 'amount'"
        "401":
          description: "Authentication Failure. Please check your authentication token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Authentication Failure:
                  value:
                    errorId: "cad1529e-040b-4c9d-a21d-2ba3056ff750"
                    errorCode: 2
                    errorMessage: "Authentication error"
        "403":
          description: "Authorization Failure. Please check your authentication token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Authorization Failure:
                  value:
                    errorId: "daa495f0-541d-4192-b636-a8877b25a510"
                    errorCode: 3
                    errorMessage: "Authorization error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                System Error:
                  value:
                    errorId: "d428a89e-fa8b-42b8-ba20-68be20d50af1"
                    errorCode: 0
                    errorMessage: "Internal error"
  /deposits/bulk:
    post:
      tags:
      - "deposits"
      summary: "Mobile Money Collection Request (Bulk)"
      description: "Batch operation which can be used to submit multiple deposit transactions for asynchronous processing. NB! Bulk requests with more than 100 DepositCreationRequest-s can be rejected by pawaPay. This API call is <em>idempotent</em>. That is, it is safe to submit a <code>BulkDepositCreationRequest</code>  with the same <code>depositId</code> multiple times: duplicates are ignored with the corresponding <code>DepositeCreationStatus</code>.
        \n\n<b>NB!</b> Since the request can be partially or fully rejected, an API user must check HTTP status code and analyze <code>DepositCreationResponse</code> for each submitted <code>DepositCreationRequest</code>."
      operationId: "createDeposits"
      requestBody:
        $ref: "#/components/requestBodies/BulkDepositCreationRequest"
      responses:
        "200":
          description: "Request has been processed by pawaPay"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/DepositCreationResponse"
              examples:
                Mixed response:
                  value:
                    - depositId: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
                      status: "ACCEPTED"
                      created: "2020-10-19T11:17:01Z"
                    - depositId: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
                      status: "DUPLICATE_IGNORED"
                      created: "2020-10-19T10:22:49Z"
                    - depositId: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
                      status: "REJECTED"
                      rejectionReason:
                        rejectionCode: "AMOUNT_TOO_LARGE"
                        ejectionMessage: "Amount should not be greater than 1000"
        "400":
          description: "Request is rejected due to incompatibility with pawaPay API specification"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Missing mandatory field:
                  value:
                    errorId: "4f0d5e13-7e88-4cc6-827c-8c0640dc2cd3"
                    errorCode: 1
                    errorMessage: "Invalid input: Missing required creator property 'amount'"
        "401":
          description: "Authentication Failure. Please check your authentication token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Authentication Failure:
                  value:
                    errorId: "cad1529e-040b-4c9d-a21d-2ba3056ff750"
                    errorCode: 2
                    errorMessage: "Authentication error"
        "403":
          description: "Authorization Failure. Please check your authentication token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Authorization Failure:
                  value:
                    errorId: "daa495f0-541d-4192-b636-a8877b25a510"
                    errorCode: 3
                    errorMessage: "Authorization error"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                System Error:
                  value:
                    errorId: "d428a89e-fa8b-42b8-ba20-68be20d50af1"
                    errorCode: 0
                    errorMessage: "Internal error"



  /deposits/{depositId}:
    get:
      tags:
      - "deposits"
      summary: "Get Deposit Status and Details"
      description: "Get deposit transaction status and deposit details by depositId which has been specified in DepositCreationRequest."
      operationId: "getDeposit"
      parameters:
      - name: "depositId"
        in: "path"
        description: "<code>payoutId</code> which has been specified in DepositCreationRequest."
        required: true
        style: "simple"
        explode: false
        schema:
          type: "string"
          minLength: 1
          maxLength: 36
      responses:
        "200":
          description: "Request has been processed by pawaPay"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepositSearchResult"
              examples:
                COMPLETED:
                  value:
                    - depositId: "8917c345-4791-4285-a416-62f24b6982db"
                      status: "COMPLETED"
                      requestedAmount: "123.45"
                      depositedAmount: "123.45"
                      currency: "ZMW"
                      country: "ZMB"
                      payer:
                        type: "MSISDN"
                        address:
                          value: "256780334452"
                      correspondent: "MTN_MOMO_ZMB"
                      statementDescription: "To ACME company"
                      customerTimestamp: "2020-10-19T08:17:00Z"
                      created: "2020-10-19T08:17:01Z"
                      respondedByPayer: "2020-10-19T08:17:02Z"
                      correspondentIds:
                        SOME_CORRESPONDENT_ID: "12356789"
                COMPLETED (Discrepancy):
                  value:
                    - depositId: "8917c345-4791-4285-a416-62f24b6982db"
                      status: "COMPLETED"
                      requestedAmount: "200.00"
                      depositedAmount: "1.00"
                      currency: "ZMW"
                      country: "ZMB"
                      payer:
                        type: "MSISDN"
                        address:
                          value: "256780334452"
                      correspondent: "MTN_MOMO_ZMB"
                      statementDescription: "To ACME company"
                      customerTimestamp: "2020-10-19T08:17:00Z"
                      created: "2020-10-19T08:17:01Z"
                      respondedByPayer: "2020-10-19T08:17:02Z"
                      correspondentIds:
                        SOME_CORRESPONDENT_ID: "12356789"
                      suspiciousActivityReport:
                      - activityType: "AMOUNT_DISCREPANCY"
                        comment: "There is a discrepancy between requested and actual deposit amount has been detected."
                ACCEPTED:
                  value:
                    - depositId: "8917c345-4791-4285-a416-62f24b6982db"
                      status: "ACCEPTED"
                      requestedAmount: "123.45"
                      currency: "ZMW"
                      country: "ZMB"
                      payer:
                        type: "MSISDN"
                        address:
                          value: "256780334452"
                      correspondent: "MTN_MOMO_ZMB"
                      statementDescription: "To ACME company"
                      customerTimestamp: "2020-10-19T08:17:00Z"
                      created: "2020-10-19T08:17:01Z"
                PENDING:
                  value:
                    - depositId: "8917c345-4791-4285-a416-62f24b6982db"
                      status: "PENDING"
                      requestedAmount: "123.45"
                      currency: "ZMW"
                      country: "ZMB"
                      payer:
                        type: "MSISDN"
                        address:
                          value: "256780334452"
                      correspondent: "MTN_MOMO_ZMB"
                      statementDescription: "To ACME company"
                      customerTimestamp: "2020-10-19T08:17:00Z"
                      created: "2020-10-19T08:17:01Z"
                SUBMITTED:
                  value:
                    - depositId: "8917c345-4791-4285-a416-62f24b6982db"
                      status: "SUBMITTED"
                      requestedAmount: "123.45"
                      currency: "ZMW"
                      country: "ZMB"
                      payer:
                        type: "MSISDN"
                        address:
                          value: "256780334452"
                      correspondent: "MTN_MOMO_ZMB"
                      statementDescription: "To ACME company"
                      customerTimestamp: "2020-10-19T08:17:00Z"
                      created: "2020-10-19T08:17:01Z"
                FAILED:
                  value:
                    - depositId: "8917c345-4791-4285-a416-62f24b6982db"
                      status: "FAILED"
                      requestedAmount: "123.45"
                      currency: "ZMW"
                      country: "ZMB"
                      payer:
                        type: "MSISDN"
                        address:
                          value: "256780334452"
                      correspondent: "MTN_MOMO_ZMB"
                      statementDescription: "From ACME company"
                      customerTimestamp: "2020-10-19T08:17:00Z"
                      created: "2020-10-19T08:17:01Z"
                      failureReason:
                        failureCode: "PAYMENT_NOT_APPROVED"
                        failureMessage: "Payment not approved"
                Deposit Not Found:
                  value:
                    []
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                System Error:
                  value:
                    errorId: "d428a89e-fa8b-42b8-ba20-68be20d50af1"
                    errorCode: 0
                    errorMessage: "Internal error"
components:
  securitySchemes:
    bearer_authentication:           
      type: http
      description: pawaPay API uses bearer authentication as its security scheme.
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AddressValue:
      type: "object"
      required:
      - "value"
      properties:
        value:
          type: "string"
          description: "The value of the financial address, based on address type.\
            \ In case of MSISDN, the format is (https://en.wikipedia.org/wiki/MSISDN).
            <p>MSISDN validation has following rules:\n
            1. Only digits without whitespaces or any other separators or prefixes like '+'.\n
            2. Should not start with zero.\n
            3. Country code is mandatory.\n
            4. Should not exceed or less than the valid length of specified country.\n
            <p>Permitted samples for country code GHA:<br>
            233558708954, 233558708955<br>
            <p>Not permitted samples for country code GHA:<br>
            +233558708954, 233 558 708954, 233-558-708954, 0233558708954, 233558708,\
            \ 233558708954872, 999558708954, 37255870895\n"
          example: "256780334452"
    Amount:
      type: "string"
      minLength: 1
      maxLength: 23
      pattern: "^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$"
      description: "Amount validation has following rules:\n1. Between zero and four\
        \ decimal places can be supplied.\n2. A maximum of 18 integer places are allowed.\n\
        3. Leading zeroes are not permitted except where the value is less than 1.\
        \ For any value less than one, one and only one leading zero must be supplied.\n\
        4. Trailing zeroes are permitted.\n5. Only values greater than ZERO are permitted.\n\
        6. Maximum value that can be supplied is 999999999999999999.9999\n<p>Permitted\
        \ samples:<br>\n5, 5.0, 5.00, 5.5, 5.50, 5.5555, 555555555555555555, 0.5\n\
        <p>\nNot permitted samples:<br>\n5., 5.55555, 5555555555555555555, .5, -5.5,\
        \ 00.5, 00.00, 00001.32\n"
      example: "15.21"
    Correspondent:
      type: "string"
      description: "The name of the financial provider"
      example: "MTN_MOMO_ZMB"
    Country:
      type: "string"
      description: "The ISO 3166-1 alpha-3, three character country code in upper\
        \ case (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3#Officially_assigned_code_elements)"
      example: "ZMB"
    Currency:
      type: "string"
      description: "The ISO 4217 three character currency code in upper case (https://en.wikipedia.org/wiki/ISO_4217#Active_codes)"
      example: "ZMW"
    Deposit:
      required:
      - "depositId"
      - "status"
      - "requestedAmount"
      - "currency"
      - "country"
      - "correspondent"
      - "payer"
      - "customerTimestamp"
      - "created"
      type: "object"
      properties:
        depositId:
          type: "string"
          minLength: 1
          maxLength: 36
          description: "The ID used for the deposit in the customers internal system."
          example: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
        status:
          $ref: "#/components/schemas/DepositStatus"
        requestedAmount:
          $ref: "#/components/schemas/Amount"
        currency:
          $ref: "#/components/schemas/Currency"
        country:
          $ref: "#/components/schemas/Country"
        correspondent:
          $ref: "#/components/schemas/Correspondent"
        payer:
          $ref: "#/components/schemas/FinancialAddress"
        customerTimestamp:
          type: "string"
          description: "The customer’s timestamp for when they initiated the deposit\
            \ process. Format defined by 'date-time' in RFC3339 section 5.6 (https://tools.ietf.org/html/rfc3339#section-5.6)"
          format: "date-time"
          example: "2020-02-21T17:32:28Z"
        statementDescription:
          type: "string"
          maxLength: 22
          description: "The message that will be sent to the recipient of this deposit."
          example: "Up to 22 chars note"
        created:
          type: "string"
          description: "The timestamp of when the deposit was created in the pawaPay\
            \ system. Format defined by 'date-time' in RFC3339 section 5.6 (https://tools.ietf.org/html/rfc3339#section-5.6)"
          format: "date-time"
          example: "2020-02-21T17:32:29Z"
        depositedAmount:
          $ref: "#/components/schemas/Amount"
        respondedByPayer:
          type: "string"
          description: "When the deposit request was responded by the payer. Format\
            \ defined by 'date-time' in RFC3339 section 5.6 (https://tools.ietf.org/html/rfc3339#section-5.6)"
          format: "date-time"
          example: "2020-02-21T17:32:30Z"
        correspondentIds:
          type: "object"
          additionalProperties:
            type: "string"
          description: "The ID-s used by the correspondent"
          example:
            MTN_INIT: "ABC123"
            MTN_FINAL: "DEF456"
        suspiciousActivityReport:
          $ref: "#/components/schemas/SuspciousDepositTransactionReport"
        failureReason:
          $ref: "#/components/schemas/DepositFailureReason"
    DepositCreationRequest:
      type: "object"
      required:
      - "depositId"
      - "amount"
      - "currency"
      - "country"
      - "correspondent"
      - "payer"
      - "customerTimestamp"
      properties:
        depositId:
          type: "string"
          minLength: 1
          maxLength: 36
          description: "A unique customer-side payout identifier. Only ASCII printable characters are allowed."
          example: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
        amount:
          $ref: "#/components/schemas/Amount"
        currency:
          $ref: "#/components/schemas/Currency"
        country:
          $ref: "#/components/schemas/Country"
        correspondent:
          $ref: "#/components/schemas/Correspondent"
        payer:
          $ref: "#/components/schemas/FinancialAddress"
        customerTimestamp:
          type: "string"
          description: "The customer’s timestamp for when they initiated the deposit\
            \ process. Used for end-to-end transparency. Format defined by 'date-time'\
            \ in RFC3339 section 5.6 (https://tools.ietf.org/html/rfc3339#section-5.6)"
          format: "date-time"
          example: "2020-02-21T17:32:28Z"
        statementDescription:
          type: "string"
          maxLength: 22
          description: "The message that will be sent to the recipient of this deposit."
          example: "Up to 22 chars note"
    DepositCreationResponse:
      type: "object"
      required:
      - "depositId"
      - "status"
      properties:
        depositId:
          type: "string"
          minLength: 1
          maxLength: 36
          description: "A unique deposit identifier provided by customer in DepositCreationRequest."
          example: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
        status:
          $ref: "#/components/schemas/DepositCreationStatus"
        created:
          type: "string"
          description: "The timestamp of when the deposit was created in the pawaPay\
            \ system. Format defined by 'date-time' in RFC3339 section 5.6 (https://tools.ietf.org/html/rfc3339#section-5.6)"
          format: "date-time"
          example: "2020-02-21T17:32:29Z"
        rejectionReason:
          $ref: "#/components/schemas/DepositRejectionReason"
    DepositCreationStatus:
      type: "string"
      description: "Enumeration presenting the status of the `DepositCreationResponse`:
        \n* `ACCEPTED` - The deposit creation request has been accepted.
        \n* `REJECTED` - The deposit creation request has been rejected. See `DepositRejectionReason` for details
        \n* `DUPLICATE_IGNORED` - This deposit creation request is duplicated and will be ignored.\n"
      enum:
      - "ACCEPTED"
      - "REJECTED"
      - "DUPLICATE_IGNORED"
    DepositFailureReason:
      type: "object"
      required:
      - "failureCode"
      properties:
        failureCode:
          type: "string"
          description: "Enumeration presenting details in case of failure:
            \n* `PAYER_NOT_FOUND` - Payer not found.
            \n* `PAYMENT_NOT_APPROVED` - Payer did not approve the payment.
            \n* `PAYER_LIMIT_REACHED` - Payer has reached the limit.
            \n* `NOT_ENOUGH_FUNDS` - Payer does not have enough funds.
            \n* `OTHER_ERROR` - Any other error. Please refer to `failureMessage` and contact support.\n"
          example: "OTHER_ERROR"
          enum:
          - "PAYER_NOT_FOUND"
          - "PAYMENT_NOT_APPROVED"
          - "PAYER_LIMIT_REACHED"
          - "NOT_ENOUGH_FUNDS"
          - "OTHER_ERROR"
        failureMessage:
          type: "string"
          description: "Additional optional failure message"
          example: "Payer's address is blocked"
    DepositRejectionReason:
      type: "object"
      required:
      - "rejectionReason"
      properties:
        rejectionCode:
          type: "string"
          description: "Enumeration presenting details in case of failure:\
            \n* `INVALID_PAYER_FORMAT` - The payer address is invalid.
            \n* `INVALID_AMOUNT` - The specified amount is not supported.
            \n* `AMOUNT_TOO_SMALL` - The specified amount is below the accepted limit.
            \n* `AMOUNT_TOO_LARGE` - The specified amount is above the accepted limit.
            \n* `INVALID_CURRENCY` - The specified currency either does not exist or is not supported for this correspondent or payer.
            \n* `INVALID_COUNTRY` - The specified country either does not exist or is not supported for this correspondent or payer.
            \n* `PARAMETER_INVALID` - One or more parameters are invalid.
            \n* `RATE_LIMIT` - The number of allowed requests within a certain time period are exceeded.
            \n* `DEPOSITS_NOT_ALLOWED` - Deposits are not allowed for this customer, this correspondent or this payer.\n"
          example: "INVALID_AMOUNT"
          enum:
          - "INVALID_PAYER_FORMAT"
          - "INVALID_AMOUNT"
          - "AMOUNT_TOO_SMALL"
          - "AMOUNT_TOO_LARGE"
          - "INVALID_CURRENCY"
          - "INVALID_COUNTRY"
          - "PARAMETER_INVALID"
          - "RATE_LIMIT"
          - "DEPOSITS_NOT_ALLOWED"
        rejectionMessage:
          type: "string"
          description: "Additional optional rejection message"
          example: "You don't have access to this correspondent"
    DepositSearchResult:
      type: "array"
      items:
        $ref: "#/components/schemas/Deposit"
    DepositStatus:
      type: "string"
      description: "Enumeration presenting the status of the deposit:
        \n* `ACCEPTED` - The deposit request has been accepted and has not processed internally.
        \n* `PENDING` - The deposit request is not yet submitted to the correspondent.
        \n* `SUBMITTED` - The deposit request has been submitted to the correspondent, with no response yet.
        \n* `CANCELED` - Final state. The deposit request was canceled by the customer.
        \n* `FAILED` - Final state. The deposit request has failed.
        \n* `COMPLETED` - Final state. The deposit request has been successful.\n"
      enum:
      - "ACCEPTED"
      - "PENDING"
      - "SUBMITTED"
      - "CANCELED"
      - "FAILED"
      - "COMPLETED"
    SuspciousDepositTransactionReport:
      type: "array"
      items:
        $ref: "#/components/schemas/SuspiciousDepositTransactionReportEntry"
    SuspiciousDepositTransactionReportEntry:
      type: "object"
      required:
      - "activityType"
      - "comment"
      properties:
        activityType:
          type: "string"
          description: "Represents a suspicious activity category\n
            \n* <code>AMOUNT_DISCREPANCY</code> - Indicates that there is a discrepancy between requested and actual deposit amount has been detected."
          example: "AMOUNT_DISCREPANCY"
          enum:
          - "AMOUNT_DISCREPANCY"
        comment:
          type: "string"
          example: "There is a discrepancy between requested and actual deposit amount has been detected."
    ErrorResponse:
      type: "object"
      required:
      - "errorId"
      - "errorCode"
      - "errorMessage"
      properties:
        errorId:
          type: "string"
          maxLength: 36
          description: "A unique error ID in pawaPay system."
          example: "63743264-7292-11ea-bc55-0242ac130003"
        errorCode:
          type: "integer"
          description: "pawaPay internal error code."
          example: 1
        errorMessage:
          type: "string"
          description: "Error message."
          example: "Internal error"
    FinancialAddress:
      type: "object"
      required:
      - "address"
      - "type"
      properties:
        type:
          type: "string"
          description: "The type of financial address."
          example: "MSISDN"
          enum:
          - "MSISDN"
        address:
          $ref: "#/components/schemas/AddressValue"
    Payout:
      type: "object"
      required:
      - "payoutId"
      - "status"
      - "amount"
      - "currency"
      - "country"
      - "correspondent"
      - "recipient"
      - "customerTimestamp"
      - "created"
      properties:
        payoutId:
          type: "string"
          minLength: 1
          maxLength: 36
          description: "A customer-side payout identifier which has been specified in <code>PayoutCreationRequest</code>."
          example: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
        status:
          $ref: "#/components/schemas/PayoutStatus"
        amount:
          $ref: "#/components/schemas/Amount"
        currency:
          $ref: "#/components/schemas/Currency"
        country:
          $ref: "#/components/schemas/Country"
        correspondent:
          $ref: "#/components/schemas/Correspondent"
        recipient:
          $ref: "#/components/schemas/FinancialAddress"
        customerTimestamp:
          type: "string"
          description: "A customer-side payout initiation timestamp.\
            \ Format defined by 'date-time' in RFC3339 section 5.6 (https://tools.ietf.org/html/rfc3339#section-5.6)"
          format: "date-time"
          example: "2020-02-21T17:32:28Z"
        statementDescription:
          type: "string"
          maxLength: 22
          description: "The message that will be sent to the recipient of this payout."
          example: "Up to 22 chars note"
        created:
          type: "string"
          description: "pawaPay-side payout initiation timestamp.\
            \ Format defined by 'date-time' in RFC3339 section 5.6 (https://tools.ietf.org/html/rfc3339#section-5.6)"
          format: "date-time"
          example: "2020-02-21T17:32:29Z"
        receivedByRecipient:
          type: "string"
          description: "When the payment was received by the recipient. Format defined\
            \ by 'date-time' in RFC3339 section 5.6 (https://tools.ietf.org/html/rfc3339#section-5.6)"
          format: "date-time"
          example: "2020-02-21T17:32:30Z"
        correspondentIds:
          type: "object"
          additionalProperties:
            type: "string"
          description: "The ids used by the correspondent"
          example:
            MTN_INIT: "ABC123"
            MTN_FINAL: "DEF456"
        failureReason:
          $ref: "#/components/schemas/PayoutFailureReason"
    PayoutCreationRequest:
      type: "object"
      required:
      - "payoutId"
      - "amount"
      - "country"
      - "currency"
      - "correspondent"
      - "recipient"
      - "customerTimestamp"
      properties:
        payoutId:
          minLength: 1
          maxLength: 36
          type: "string"
          description: "A unique customer-side payout identifier. Only ASCII printable characters are allowed."
          example: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
        amount:
          $ref: "#/components/schemas/Amount"
        currency:
          $ref: "#/components/schemas/Currency"
        country:
          $ref: "#/components/schemas/Country"
        correspondent:
          $ref: "#/components/schemas/Correspondent"
        recipient:
          $ref: "#/components/schemas/FinancialAddress"
        customerTimestamp:
          type: "string"
          description: "A customer-side payout initiation timestamp.\
            \ Used for end-to-end transparency. Format defined by 'date-time'\
            \ in RFC3339 section 5.6 (https://tools.ietf.org/html/rfc3339#section-5.6)"
          format: "date-time"
          example: "2020-02-21T17:32:28Z"
        statementDescription:
          type: "string"
          maxLength: 22
          description: "The message that will be sent to the recipient of this payout."
          example: "Up to 22 chars note"
    PayoutCreationResponse:
      type: "object"
      required:
      - "payoutId"
      - "status"
      properties:
        payoutId:
          type: "string"
          minLength: 1
          maxLength: 36
          description: "A unique payout identifier provided by customer in PayoutCreationRequest."
          example: "f4401bd2-1568-4140-bf2d-eb77d2b2b639"
        status:
          $ref: "#/components/schemas/PayoutCreationStatus"
        created:
          type: "string"
          description: "The timestamp of when the payout was created in the pawaPay\
            \ system. Format defined by 'date-time' in RFC3339 section 5.6 (https://tools.ietf.org/html/rfc3339#section-5.6)"
          format: "date-time"
          example: "2020-02-21T17:32:29Z"
        rejectionReason:
          $ref: "#/components/schemas/PayoutRejectionReason"
    PayoutCreationStatus:
      type: "string"
      description: "Enumeration presenting the status of the Payout Creation:
        \n* `ACCEPTED` - The payout creation request has been accepted.
        \n* `REJECTED` - The payout creation request has been rejected. See rejectionReason for details.
        \n* `DUPLICATE_IGNORED` - The payout creation request has been ignored as a duplicate of already accepted payout creation request. Duplication logic relies upon payoutId.\n"
      # enum:
      # - "ACCEPTED"
      # - "REJECTED"
      # - "DUPLICATE_IGNORED"
    PayoutFailureReason:
      type: "object"
      required:
      - "failureCode"
      properties:
        failureCode:
          type: "string"
          description: "Enumeration presenting details in case of failure:
            \n* `BALANCE_INSUFFICIENT` - The customer’s balance is insufficient to proceed with the payout.
            \n* `RECIPIENT_NOT_FOUND` - Recipient not found.
            \n* `RECIPIENT_NOT_ALLOWED_TO_RECEIVE` - Recipient cannot receive funds due to e.g. transfer limit.
            \n* `RECIPIENT_LIMIT_REACHED` - Recipient has reached the limit
            \n* `OTHER_ERROR` - Any other error. Please refer to `failureMessage` and contact support.\n"
          example: "OTHER_ERROR"
          enum:
          - "BALANCE_INSUFFICIENT"
          - "RECIPIENT_NOT_FOUND"
          - "RECIPIENT_NOT_ALLOWED_TO_RECEIVE"
          - "RECIPIENT_LIMIT_REACHED"
          - "OTHER_ERROR"
        failureMessage:
          type: "string"
          description: "Additional optional failure message"
          example: "Recipient's address is blocked"
    PayoutRejectionReason:
      type: "object"
      required:
      - "rejectionReason"
      properties:
        rejectionCode:
          type: "string"
          description: "Enumeration presenting details in case of failure:
            \n* `BALANCE_INSUFFICIENT` - The customer’s balance is insufficient to proceed with the payout.
            \n* `INVALID_RECIPIENT_FORMAT` - The account number (MSISDN etc) specified is invalid.
            \n* `INVALID_AMOUNT`- The specified amount is not supported.
            \n* `AMOUNT_TOO_SMALL` - The specified amount is below the accepted limit.
            \n* `AMOUNT_TOO_LARGE` - The specified amount is above the accepted limit.
            \n* `INVALID_CURRENCY` - The specified currency either does not exist or is not supported for the target account.
            \n* `INVALID_COUNTRY` - The specified country either does not exist or is not supported for this correspondent.
            \n* `PARAMETER_INVALID` - One or more parameters are invalid.
            \n* `RATE_LIMIT` - The number of allowed requests within a certain time period are exceeded.
            \n* `PAYOUTS_NOT_ALLOWED` - Payouts are not allowed for this customer, this correspondent or this recipient.\n"
          example: "INVALID_AMOUNT"
          # enum:
          # - "BALANCE_INSUFFICIENT"
          # - "INVALID_RECIPIENT_FORMAT"
          # - "INVALID_AMOUNT"
          # - "AMOUNT_TOO_SMALL"
          # - "AMOUNT_TOO_LARGE"
          # - "INVALID_CURRENCY"
          # - "INVALID_COUNTRY"
          # - "PARAMETER_INVALID"
          # - "RATE_LIMIT"
          # - "PAYOUTS_NOT_ALLOWED"
        rejectionMessage:
          type: "string"
          description: "Additional optional rejection message"
          example: "You don't have access to this correspondent"
    PayoutSearchResult:
      type: "array"
      items:
        $ref: "#/components/schemas/Payout"
    PayoutStatus:
      type: "string"
      description: "Enumeration presenting the status of the payout:
        \n* `ACCEPTED` - The payout request has been accepted by pawaPay.
        \n* `PENDING` - The payout request is not yet submitted to the correspondent.
        \n* `SUBMITTED` - The payout request has been submitted to the correspondent, with no response yet.
        \n* `CANCELED` - Final state. The payout request was canceled by the customer.
        \n* `FAILED` - Final state. The payout request has failed.
        \n* `COMPLETED` - Final state. The payout request has been successful.\n"
      enum:
      - "ACCEPTED"
      - "PENDING"
      - "SUBMITTED"
      - "CANCELED"
      - "FAILED"
      - "COMPLETED"
  requestBodies:
    DepositCreationRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DepositCreationRequest"
      required: true
    BulkDepositCreationRequest:
      content:
        application/json:
          schema:
            type: "array"
            items:
              $ref: "#/components/schemas/DepositCreationRequest"
      required: true
    PayoutCreationRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PayoutCreationRequest"
      required: true
    BulkPayoutCreationRequest:
      content:
        application/json:
          schema:
            type: "array"
            items:
              $ref: "#/components/schemas/PayoutCreationRequest"
      required: true

x-webhooks:
  payoutCallback:
    post:
      tags:
      - "payouts"
      summary: "Payout Status Notification Callback"
      operationId: payoutWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payout"
        required: true
      responses:
        "200":
          description: "OK"

  depositCallback:
    post:
      tags:
      - "deposits"
      summary: "Deposit Status Notification Callback"
      operationId: depositWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Deposit"
        required: true
      responses:
        "200":
          description: "OK"